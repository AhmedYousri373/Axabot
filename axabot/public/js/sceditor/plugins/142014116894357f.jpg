// Simple Set Clipboard System
// Author: Joseph Huckaby

var ZeroClipboard = {
        
        version: "1.0.7",
        clients: {}, // registered upload clients on page, indexed by id
        moviePath: 'ZeroClipboard.swf', // URL to movie
        nextId: 1, // ID of next movie
        
        $: function(thingy) {
                // simple DOM lookup utility function
                if (typeof(thingy) == 'string') thingy = document.getElementById(thingy);
                if (!thingy.addClass) {
                        // extend element with a few useful methods
                        thingy.hide = function() { this.style.display = 'none'; };
                        thingy.show = function() { this.style.display = ''; };
                        thingy.addClass = function(name) { this.removeClass(name); this.className += ' ' + name; };
                        thingy.removeClass = function(name) {
                                var classes = this.className.split(/\s+/);
                                var idx = -1;
                                for (var k = 0; k < classes.length; k++) {
                                        if (classes[k] == name) { idx = k; k = classes.length; }
                                }
                                if (idx > -1) {
                                        classes.splice( idx, 1 );
                                        this.className = classes.join(' ');
                                }
                                return this;
                        };
                        thingy.hasClass = function(name) {
                                return !!this.className.match( new RegExp("\\s*" + name + "\\s*") );
                        };
                }
                return thingy;
        },
        
        setMoviePath: function(path) {
                // set path to ZeroClipboard.swf
                this.moviePath = path;
        },
        
        dispatch: function(id, eventName, args) {
                // receive event from flash movie, send to client               
                var client = this.clients[id];
                if (client) {
                        client.receiveEvent(eventName, args);
                }
        },
        
        register: function(id, client) {
                // register new client to receive events
                this.clients[id] = client;
        },
        
        getDOMObjectPosition: function(obj, stopObj) {
                // get absolute coordinates for dom element
                var info = {
                        left: 0, 
                        top: 0, 
                        width: obj.width ? obj.width : obj.offsetWidth, 
                        height: obj.height ? obj.height : obj.offsetHeight
                };

                while (obj && (obj != stopObj)) {
                        info.left += obj.offsetLeft;
                        info.top += obj.offsetTop;
                        obj = obj.offsetParent;
                }

                return info;
        },
        
        Client: function(elem) {
                // constructor for new simple upload client
                this.handlers = {};
                
                // unique ID
                this.id = ZeroClipboard.nextId++;
                this.movieId = 'ZeroClipboardMovie_' + this.id;
                
                // register client with singleton to receive flash events
                ZeroClipboard.register(this.id, this);
                
                // create movie
                if (elem) this.glue(elem);
        }
};

ZeroClipboard.Client.prototype = {
        
        id: 0, // unique ID for us
        ready: false, // whether movie is ready to receive events or not
        movie: null, // reference to movie object
        clipText: '', // text to copy to clipboard
        handCursorEnabled: true, // whether to show hand cursor, or default pointer cursor
        cssEffects: true, // enable CSS mouse effects on dom container
        handlers: null, // user event handlers
        
        glue: function(elem, appendElem, stylesToAdd) {
                // glue to DOM element
                // elem can be ID or actual DOM element object
                this.domElement = ZeroClipboard.$(elem);
                
                // float just above object, or zIndex 99 if dom element isn't set
		// auto z-index using jquery
                var zIndex = $(elem).parent().css('z-index')+1;
                if (this.domElement.style.zIndex) {
                        zIndex = parseInt(this.domElement.style.zIndex, 10) + 1;
                }
                
                if (typeof(appendElem) == 'string') {
                        appendElem = ZeroClipboard.$(appendElem);
                }
                else if (typeof(appendElem) == 'undefined') {
                        appendElem = document.getElementsByTagName('body')[0];
                }
                
                // find X/Y position of domElement
                var box = ZeroClipboard.getDOMObjectPosition(this.domElement, appendElem);
                
                // create floating DIV above element
                this.div = document.createElement('div');
                var style = this.div.style;
                style.position = 'absolute';
                style.left = '' + box.left + 'px';
                style.top = '' + box.top + 'px';
                style.width = '' + box.width + 'px';
                style.height = '' + box.height + 'px';
                style.zIndex = zIndex;
                
                if (typeof(stylesToAdd) == 'object') {
                        for (addedStyle in stylesToAdd) {
                                style[addedStyle] = stylesToAdd[addedStyle];
                        }
                }
                
                // style.backgroundColor = '#f00'; // debug
                
                appendElem.appendChild(this.div);
    